{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifts.js","components/GiftGrid.js","hooks/useFetch.js","components/GiftExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","onChange","target","value","GifGridItem","img","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gifts","map","id","images","downsized_medium","GiftGrid","loading","state","setState","useEffect","then","useFetch","GiftExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAY,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACpCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,SAjBe,SAACN,GACpBF,EAAcE,EAAEO,OAAOC,QAiBnBA,MAAOX,OCzBFY,EAAc,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACpBC,EAAeD,EAAfC,MAAOC,EAAQF,EAARE,IAEf,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNGK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBN,EADgB,gDAC+BO,UAAUF,GADzC,+DAEHG,MAAMR,GAFH,cAEhBS,EAFgB,gBAGCA,EAAKC,OAHN,uBAGdC,EAHc,EAGdA,KAEFC,EAAQD,EAAKE,KAAI,SAAAf,GAAG,MAAK,CAC7BgB,GAAIhB,EAAIgB,GACRf,MAAOD,EAAIC,MACXC,IAAKF,EAAIiB,OAAOC,iBAAiBhB,QARb,kBAWfY,GAXe,4CAAH,sDCIRK,EAAW,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDlB,SAACA,GAAc,IAAD,EAEVrB,mBAAS,CACjC2B,KAAM,GACNO,SAAS,IAJyB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAcpC,OAPAC,qBAAU,WACRjB,EAASC,GAAUiB,MAAK,SAACP,GAAD,OAAWK,EAAS,CAC1CT,KAAMI,EACNG,SAAS,SAEV,CAACb,IAEGc,EDZ2BI,CAASlB,GAA7BU,EAD0B,EAChCJ,KAAcO,EADkB,EAClBA,QAEtB,OACE,qCACE,oBAAIjB,UAAU,oCAAd,SAAmDI,IAEjDa,EAAU,mBAAGjB,UAAU,mCAAb,4BACR,qBAAKA,UAAU,YAAf,SAEIc,EAAOF,KAAI,SAACf,GAAD,OACT,cAAC,EAAD,CAA0BA,IAAKA,GAAbA,EAAIgB,aEXzBU,EAAgB,WAAO,IAAD,EACGxC,mBAAS,CAAC,iBADb,mBAC1ByC,EAD0B,KACdC,EADc,KAGjC,OACE,gCACE,iDACA,cAAC,EAAD,CAAa3C,YAAa2C,IAC1B,uBAEA,6BAEID,EAAWZ,KAAI,SAACR,GAAD,OACb,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MCZnBsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9b5ef7a9.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategory }) => {\n\n  const [inputValue, setInputValue] = useState('');\n\n  const handleChange = (e ) => {\n    setInputValue(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if(inputValue.trim().length > 2) {\n      setCategory(cats => [inputValue, ...cats]);\n      setInputValue('');\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        onChange={handleChange}\n        value={inputValue} />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategory: PropTypes.func.isRequired\n}\n","export const GifGridItem = ({ img }) => {\n  const { title, url } = img;\n\n  return (\n    <div className=\"animate__animated animate__fadeIn card\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n","export const getGifts = async (category) => {\n  const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=hDgkUw0FBksnhXDEG9PB3c0bbMnKuY8Z`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifts = data.map(img => ({\n    id: img.id,\n    title: img.title,\n    url: img.images.downsized_medium.url\n  }));\n\n  return gifts;\n}\n","import { GifGridItem } from \"./GifGridItem\";\n\nimport { useFetch } from \"../hooks/useFetch\"\n\nexport const GiftGrid = ({ category }) => {\n  const { data: images, loading } = useFetch(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n      {\n        loading ? <p className=\"animate__animated animate__flash\">Loading  .....</p> : (\n          <div className=\"card-grid\">\n            {\n              images.map((img) => (\n                <GifGridItem key={img.id} img={img} />\n              ))\n            }\n          </div>\n        )\n      }\n    </>\n  )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifts } from \"../helpers/getGifts\";\n\nexport const useFetch = (category) => {\n\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getGifts(category).then((images) =>setState({\n      data: images,\n      loading: false\n    }))\n  }, [category]);\n\n  return state;\n}\n","import { useState } from \"react\";\nimport { AddCategory } from './AddCategory';\nimport { GiftGrid } from \"./GiftGrid\";\n\nexport const GiftExpertApp = () => {\n  const [categories, setCategories] = useState(['Dragon  Ball']);\n\n  return (\n    <div>\n      <h2>Gift Expert App</h2>\n      <AddCategory setCategory={setCategories} />\n      <hr />\n\n      <ol>\n        {\n          categories.map((category) => (\n            <GiftGrid\n              key={category}\n              category={category} />\n            // <li key={category}>{category}</li>\n          ))\n        }\n      </ol>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './components/GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}